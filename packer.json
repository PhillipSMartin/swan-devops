{
    "variables": {
      "aws_access_key_id": "{{env `AWS_ACCESS_KEY_ID`}}",
      "aws_secret_access_key": "{{env `AWS_SECRET_ACCESS_KEY`}}",
      "aws_session_token": "{{env `AWS_SESSION_TOKEN`}}",
      "timezone": "America/New_York"
    },
    "builders": [
      {
        "type": "amazon-ebs",
        "access_key": "{{user `aws_access_key_id`}}",
        "secret_key": "{{user `aws_secret_access_key`}}",
        "token": "{{user `aws_session_token`}}",
        "region": "us-east-2",
        "source_ami": "ami-0b0033935e98632de",
        "instance_type": "t2.micro",
        "ssh_username": "ec2-user",
        "associate_public_ip_address": "true",
        "ami_name": "swangames-ecs {{timestamp}}",
        "launch_block_device_mappings": [
            {
              "device_name": "/dev/xvdcy",
              "volume_size": 20,
              "volume_type": "gp2",
              "delete_on_termination": true
            }
        ],
        "tags": {
          "Name": "Swan Games ECS Base Image 2022.10a",
          "SourceAMI": "{{ .SourceAMI }}",
          "DockerVersion": "20.10.13",
          "ECSAgentVersion": "1.64.0"
        }
      }
    ],
    "provisioners": [
        {
          "type": "shell",
          "script": "scripts/storage.sh"
        },
        {
            "type": "shell",
            "script": "scripts/time.sh",
            "environment_vars": [
                "TIMEZONE={{user `timezone`}}"
            ]
        },
        {
          "type": "shell",
          "script": "scripts/cloudinit.sh"
        },
        {
          "type": "shell",
          "inline": [
            "sudo yum -y -x docker\\* -x ecs\\* update",
            "sudo yum -y install aws-cfn-bootstrap awslogs jq ec2-instance-connect"
          ] 
        },
        {
          "type": "shell",
          "script": "scripts/cleanup.sh"
        },
        {
          "type": "file",
          "source": "files/firstrun.sh",
          "destination": "/home/ec2-user/firstrun.sh"
        }
    ],
    "post-processors": [
      {
        "type": "manifest",
        "output": "manifest.json",
        "strip_path": true
      }
    ]
  }